<Application x:Class="BatchRename.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BatchRename"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<ResourceDictionary>

			<ResourceDictionary.MergedDictionaries>
				<!--Basic Material Design theme-->
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

				<!--Material Design color-->
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Cyan.xaml" />

				<!--BatchRename resource-->
				<ResourceDictionary>
					<!--Override Material Design theme-->
					<SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary300}"/>
					<SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary300Foreground}"/>
					<SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
					<SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
					<SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
					<SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
					<SolidColorBrush x:Key="BRLightCyan" Color="{StaticResource Primary100}" />

					<!--Custom toggle button to create expander button-->
					<ControlTemplate x:Key="CustomExpanderButton" TargetType="{x:Type ToggleButton}">
						<Border x:Name="ExpanderButtonBorder"
							Background="{StaticResource BRLightCyan}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
            >
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Rectangle Fill="{StaticResource BRLightCyan}" Grid.ColumnSpan="2"/>
								<Ellipse Name="Circle"
									Grid.Column="0"
									Stroke="Black"
									Width="20"
									Height="20"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
                 />
								<Path x:Name="ExpanderIcon"
									Grid.Column="0"
									Data="M 0,5 H 10 M 5,0 V 10 Z"
									Stroke="Black"
									Width="10"
									Height="10"
									StrokeThickness="2"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									RenderTransformOrigin="0.5,0.5"
								>
									<Path.RenderTransform>
										<RotateTransform Angle="0"/>
									</Path.RenderTransform>
								</Path>
								<ContentPresenter x:Name="HeaderContent"
                  Grid.Column="1"
                  Margin="4,0,0,0"
                  ContentSource="Content"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked"
                 Value="True">
								<Setter Property="Data" TargetName="ExpanderIcon" Value="M 0,5 H 10 Z"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
								<Setter Property="Stroke" Value="#222" TargetName="ExpanderIcon"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
								<Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
								<Setter Property="Stroke" Value="#FF003366" TargetName="ExpanderIcon"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>

					<!--Override Expander style-->
					<Style TargetType="Expander" x:Key="ExpanderStyle">
						<!--<Setter Property="Background" Value="Cyan" />-->
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextColor}}"/>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate x:Name="CustomExpander" TargetType="{x:Type Expander}">
									<DockPanel>
										<ToggleButton x:Name="ExpanderButton"
                      DockPanel.Dock="Top"
                      Template="{StaticResource CustomExpanderButton}"
                      Content="{TemplateBinding Header}"
                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                      OverridesDefaultStyle="True"
                      Padding="1.5,0">
										</ToggleButton>
										<ContentPresenter x:Name="ExpanderContent"
                      Visibility="Collapsed"
                      DockPanel.Dock="Bottom"/>
									</DockPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsExpanded" Value="True">
											<Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Application.Resources>
</Application>
